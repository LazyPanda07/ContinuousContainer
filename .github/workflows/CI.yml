name: CI

on:
  push:
    branches: [master, dev]
  
jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v3
  
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@main

    - name: Build
      run: msbuild /p:Configuration=${{ matrix.configuration }} /p:Platform=x64

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.configuration }}
        path: bin/${{ matrix.configuration }}-x64


  tests:
    runs-on: windows-latest
    needs: build
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - uses: actions/checkout@v3
  
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@main

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with: 
        name: ${{ matrix.configuration }}

    - name: Setup GoogleTest configuration
      run: echo "GOOGLE_TEST_CONFIGURATION=$(if ("${{ matrix.configuration }}".Contains("Release")) { echo "Release" } else { echo "Debug" })" >> $Env:GITHUB_ENV

    - name: Build GoogleTest
      working-directory: ${{ github.workspace }}/Tests
      run: |
          git clone https://github.com/google/googletest.git -b v1.14.x
          cd googletest && mkdir build && cd build && cmake -Dgtest_force_shared_crt=ON -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/tests/gtest ..
          msbuild /p:Configuration=${{ env.GOOGLE_TEST_CONFIGURATION }} /p:Platform=x64 INSTALL.vcxproj
          
    - name: Tests
      working-directory: ${{ github.workspace }}/Tests
      run: |
          msbuild /p:Configuration=${{ env.GOOGLE_TEST_CONFIGURATION }} /p:Platform=x64 Tests.vcxproj
          bin\${{ env.GOOGLE_TEST_CONFIGURATION }}-x64\Tests\Tests.exe


  publish:
    runs-on: windows-latest
    permissions: write-all
    needs: [build, tests]

    steps:
    - uses: actions/checkout@v3

    - uses: LazyPanda07/extract-current-branch@master

    - name: Setup release version variable
      run: echo "CONTINUOUS_CONTAINER_VERSION=$($($($(Select-String -Path .\include\ContinuousContainer.h -Pattern continuousContainerVersion) -split '( = )')[2].TrimEnd(';')).Trim('\"'))" >> $Env:GITHUB_ENV
      
    - name: Setup archive name variable
      run: echo "CONTINUOUS_CONTAINER_ARCHIVE_NAME=ContinuousContainer_${{ env.CONTINUOUS_CONTAINER_VERSION }}.zip" >> $Env:GITHUB_ENV

    - name: Download artifacts
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: actions/download-artifact@v3
      
    - name: Create zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: Compress-Archive -Path @("Debug", "Release", "include") -DestinationPath ${{ env.CONTINUOUS_CONTAINER_ARCHIVE_NAME }}
      
    - name: Publish
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: svenstaro/upload-release-action@master
      with:
        tag: v${{ env.CONTINUOUS_CONTAINER_VERSION }}
        file: ${{ env.CONTINUOUS_CONTAINER_ARCHIVE_NAME }}
        